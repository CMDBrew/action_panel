%input-solid-focused {
  background: $component-focus-bg;
  border-color: transparent;
  @include shadow(inset 0 -#{$input-btn-focus-width} 0 0 $input-btn-focus-color);
}

%input-solid {
  background-color: $input-solid-bg;
  border-width: 0 0 $input-border-width 0;
  -webkit-appearance: none;
  border-radius: $input-border-radius $input-border-radius 0 0;
  &:focus { @extend %input-solid-focused; }
}

@if $input-solid {
  .custom-file-input-group {
    .custom-file-preview {
      background: $input-solid-bg;
      border: 0;
    }

    .custom-file-input:focus {
      @include shadow(none);

      ~ .custom-file-label {
        @include shadow(inset 0 -#{$input-btn-focus-width} 0 0 $input-btn-focus-color);
      }
    }

    .custom-file-label {
      @extend %input-solid;

      &::after {
        font-weight: $btn-font-weight;
        color: $primary;
        text-transform: $btn-text-transform;
        background: transparent;
      }
    }
  }

  .select2-container--focus .select2-selection.select2-selection--single,
  .select2-container--open .select2-selection.select2-selection--multiple {
    @extend %input-solid-focused;
  }

  .select2-search--dropdown { padding: map-get($spacers, 2); }

  .select2-container--bootstrap4 .select2-search--dropdown .select2-search__field {
    @extend %input-solid;
  }

  .select2-selection {
    &.select2-selection--multiple,
    &.select2-selection--single {
      @extend %input-solid;
      @include shadow(none);
    }

    &.select2-selection--multiple .select2-selection__choice {
      $_remove-size: 18px;
      $_remove-bg: $secondary;

      position: relative;
      padding-right: calc(#{$_remove-size} + 3 * #{map-get($spacers, 1)});
      padding-left: map-get($spacers, 2);
      background: $component-focus-bg;
      border: 0;
      border-radius: 12px;

      .select2-selection__choice__remove {
        position: absolute;
        top: 50%;
        right: map-get($spacers, 1);
        width: $_remove-size;
        height: $_remove-size;
        margin: 0;
        line-height: $_remove-size;
        color: color-yiq($_remove-bg);
        text-align: center;
        background: $_remove-bg;
        border-radius: 50%;
        @include transform(translateY(-50%));
      }
    }
  }

  .form-control,
  .custom-select {
    &:not([type='radio']):not([type='checkbox']) { @extend %input-solid; }
    &.form-control-sm { margin-left: $input-padding-x-sm; }
  }

  .input-group > *:not(:last-child) { margin-right: map-get($spacers, 2); }
}

.inline-hints,
.inline-errors {
  margin-top: map-get($spacers, 1);
  margin-bottom: 0;
  margin-left: $input-padding-x;
  font-size: $caption-font-size;
  color: $secondary;
}

.switch.input {
  .inline-hints,
  .inline-errors {
    margin-left: 0;
  }
}

.input.error {
  .form-control,
  .custom-select,
  .custom-file-label {
    border-color: $danger;
  }
}

.formtastic {
  fieldset.has_many_fields {
    > ol li.has-many-inputs { padding: 0; }
    > ol { flex-direction: row-reverse; }

    > ol li.handle {
      padding: $spacer;
      padding-right: 0;
    }

    .columns { margin: 0 calc(-#{$grid-gutter-width} / 2); }
  }
}

